{"ast":null,"code":"var _jsxFileName = \"/Users/haideriqbal/Documents/ebi_test_ontology/frontend/ontology-frontend/src/OntologyList.js\",\n  _s = $RefreshSig$();\n// OntologyList.js\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { List } from 'react-virtualized';\nimport './App.css';\nimport OntologyListItem from './OntologyListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OntologyList() {\n  _s();\n  const [ontologies, setOntologies] = useState([]);\n  useEffect(() => {\n    const fetchOntologies = async () => {\n      const result = await axios.get('http://localhost:8080/api/ontologies');\n      setOntologies(result.data);\n    };\n    fetchOntologies();\n  }, []);\n  function rowRenderer({\n    key,\n    // Unique key within array of rows\n    index,\n    // Index of row within collection\n    isScrolling,\n    // The List is currently being scrolled\n    isVisible,\n    // This row is visible within the List (eg it is not an overscanned row)\n    style // Style object to be applied to row (to position it)\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: ontologies.map(ontology => /*#__PURE__*/_jsxDEV(OntologyListItem, {\n        ontology: ontology\n      }, ontology, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this))\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(List, {\n    width: 300,\n    height: 300,\n    rowCount: ontologies.length,\n    rowHeight: 50,\n    rowRenderer: rowRenderer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(OntologyList, \"+NoAuHqfZgikBfzdhHygUMyw6NQ=\");\n_c = OntologyList;\nexport default OntologyList;\nvar _c;\n$RefreshReg$(_c, \"OntologyList\");","map":{"version":3,"names":["useState","useEffect","axios","List","OntologyListItem","jsxDEV","_jsxDEV","OntologyList","_s","ontologies","setOntologies","fetchOntologies","result","get","data","rowRenderer","key","index","isScrolling","isVisible","style","children","map","ontology","fileName","_jsxFileName","lineNumber","columnNumber","width","height","rowCount","length","rowHeight","_c","$RefreshReg$"],"sources":["/Users/haideriqbal/Documents/ebi_test_ontology/frontend/ontology-frontend/src/OntologyList.js"],"sourcesContent":["// OntologyList.js\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {List} from 'react-virtualized';\nimport './App.css';\n\nimport OntologyListItem from './OntologyListItem';\n\nfunction OntologyList() {\n    const [ontologies, setOntologies] = useState([]);\n\n    useEffect(() => {\n        const fetchOntologies = async () => {\n            const result = await axios.get('http://localhost:8080/api/ontologies');\n\n            setOntologies(result.data);\n        };\n\n        fetchOntologies();\n    }, []);\n\n    function rowRenderer({\n                             key, // Unique key within array of rows\n                             index, // Index of row within collection\n                             isScrolling, // The List is currently being scrolled\n                             isVisible, // This row is visible within the List (eg it is not an overscanned row)\n                             style, // Style object to be applied to row (to position it)\n                         }) {\n        return (\n            <div key={key} style={style}>\n                {ontologies.map(ontology => (\n                    <OntologyListItem\n                        key={ontology}\n                        ontology={ontology}\n                    />\n                ))}\n            </div>\n        );\n    }\n\n    return (\n        <List\n            width={300}\n            height={300}\n            rowCount={ontologies.length}\n            rowHeight={50}\n            rowRenderer={rowRenderer}\n        />\n    );\n}\n\nexport default OntologyList;"],"mappings":";;AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,IAAI,QAAO,mBAAmB;AACtC,OAAO,WAAW;AAElB,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACZ,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,MAAM,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,sCAAsC,CAAC;MAEtEH,aAAa,CAACE,MAAM,CAACE,IAAI,CAAC;IAC9B,CAAC;IAEDH,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,SAASI,WAAWA,CAAC;IACIC,GAAG;IAAE;IACLC,KAAK;IAAE;IACPC,WAAW;IAAE;IACbC,SAAS;IAAE;IACXC,KAAK,CAAE;EACX,CAAC,EAAE;IACpB,oBACId,OAAA;MAAec,KAAK,EAAEA,KAAM;MAAAC,QAAA,EACvBZ,UAAU,CAACa,GAAG,CAACC,QAAQ,iBACpBjB,OAAA,CAACF,gBAAgB;QAEbmB,QAAQ,EAAEA;MAAS,GADdA,QAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACJ;IAAC,GANIX,GAAG;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOR,CAAC;EAEd;EAEA,oBACIrB,OAAA,CAACH,IAAI;IACDyB,KAAK,EAAE,GAAI;IACXC,MAAM,EAAE,GAAI;IACZC,QAAQ,EAAErB,UAAU,CAACsB,MAAO;IAC5BC,SAAS,EAAE,EAAG;IACdjB,WAAW,EAAEA;EAAY;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEV;AAACnB,EAAA,CAzCQD,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AA2CrB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}