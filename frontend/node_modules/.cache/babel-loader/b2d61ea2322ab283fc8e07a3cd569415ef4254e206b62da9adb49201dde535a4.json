{"ast":null,"code":"var _jsxFileName = \"/Users/haideriqbal/Documents/ebi_test_ontology/frontend/ontology-frontend/src/OntologyDetails.js\",\n  _s = $RefreshSig$();\n// OntologyDetails.js\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OntologyDetails({\n  ontologyId\n}) {\n  _s();\n  const [ontology, setOntology] = useState(null);\n  useEffect(() => {\n    const fetchOntology = async () => {\n      const result = await axios.get('/api/ontologies/' + ontologyId);\n      setOntology(result.data);\n    };\n    fetchOntology();\n  }, [ontologyId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: ontology && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: ontology.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: ontology.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: ontology.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Definitions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: ontology.definitions.map(def => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: def\n        }, def, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Synonyms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: ontology.synonyms.map(syn => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: syn\n        }, syn, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(OntologyDetails, \"AdTqjJNf17Z5oEVYbXPDw7KAoxE=\");\n_c = OntologyDetails;\nexport default OntologyDetails;\nvar _c;\n$RefreshReg$(_c, \"OntologyDetails\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","OntologyDetails","ontologyId","_s","ontology","setOntology","fetchOntology","result","get","data","children","id","fileName","_jsxFileName","lineNumber","columnNumber","title","description","definitions","map","def","synonyms","syn","_c","$RefreshReg$"],"sources":["/Users/haideriqbal/Documents/ebi_test_ontology/frontend/ontology-frontend/src/OntologyDetails.js"],"sourcesContent":["// OntologyDetails.js\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction OntologyDetails({ ontologyId }) {\n    const [ontology, setOntology] = useState(null);\n\n    useEffect(() => {\n        const fetchOntology = async () => {\n            const result = await axios.get('/api/ontologies/' + ontologyId);\n            setOntology(result.data);\n        };\n        fetchOntology();\n    }, [ontologyId]);\n\n    return (\n        <div>\n            {ontology && (\n                <div>\n                    <h1>{ontology.id}</h1>\n                    <h2>{ontology.title}</h2>\n                    <p>{ontology.description}</p>\n                    <h3>Definitions</h3>\n                    <ul>\n                        {ontology.definitions.map(def => (\n                            <li key={def}>{def}</li>\n                        ))}\n                    </ul>\n                    <h3>Synonyms</h3>\n                    <ul>\n                        {ontology.synonyms.map(syn => (\n                            <li key={syn}>{syn}</li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default OntologyDetails;"],"mappings":";;AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,eAAeA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZ,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,MAAM,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,kBAAkB,GAAGN,UAAU,CAAC;MAC/DG,WAAW,CAACE,MAAM,CAACE,IAAI,CAAC;IAC5B,CAAC;IACDH,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,CAACJ,UAAU,CAAC,CAAC;EAEhB,oBACIF,OAAA;IAAAU,QAAA,EACKN,QAAQ,iBACLJ,OAAA;MAAAU,QAAA,gBACIV,OAAA;QAAAU,QAAA,EAAKN,QAAQ,CAACO;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtBf,OAAA;QAAAU,QAAA,EAAKN,QAAQ,CAACY;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzBf,OAAA;QAAAU,QAAA,EAAIN,QAAQ,CAACa;MAAW;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7Bf,OAAA;QAAAU,QAAA,EAAI;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBf,OAAA;QAAAU,QAAA,EACKN,QAAQ,CAACc,WAAW,CAACC,GAAG,CAACC,GAAG,iBACzBpB,OAAA;UAAAU,QAAA,EAAeU;QAAG,GAATA,GAAG;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAC1B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACLf,OAAA;QAAAU,QAAA,EAAI;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBf,OAAA;QAAAU,QAAA,EACKN,QAAQ,CAACiB,QAAQ,CAACF,GAAG,CAACG,GAAG,iBACtBtB,OAAA;UAAAU,QAAA,EAAeY;QAAG,GAATA,GAAG;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAC1B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EACR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACZ,EAAA,CAlCQF,eAAe;AAAAsB,EAAA,GAAftB,eAAe;AAoCxB,eAAeA,eAAe;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}